{"ast":null,"code":"var _jsxFileName = \"/Users/danielsmetanka/Desktop/dataexchange.github.io/src/components/AddDataContainer.jsx\";\nimport React, { Component } from \"react\";\n\nclass AddDataContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableName: this.props.tableName,\n      //readonly\n      attributes: [\"Firstname\", \"Surname\", \"Age\"],\n      //readonly\n      data: []\n    };\n    this.addDataURL = \"api/add-data\";\n    this.getAttributesURL = \"\";\n    this.loading = true;\n\n    this.resetState = () => {\n      this.setState({\n        data: []\n      });\n    };\n\n    this.handleSubmit = () => {\n      const data = {};\n      data[\"tableName\"] = this.state.tableName;\n      data[\"data\"] = this.state.data;\n      this.resetState();\n      this.postData(this.addDataURL, data).then(receivedData => {\n        console.log(receivedData);\n      });\n    };\n\n    this.getTableColumns = tableName => {\n      const response = this.postData(URL, tableName);\n      const attributes = response.json();\n    };\n\n    this.handleChange = idx => e => {\n      const {\n        name,\n        value\n      } = e.target;\n      const data = [...this.state.data];\n      data[idx][name] = value;\n      this.setState({\n        data\n      });\n    };\n\n    this.handleChangeOnTableName = e => {\n      const {\n        value\n      } = e.target;\n      this.setState({\n        tableName: value\n      });\n    };\n\n    this.handleAddRow = () => {\n      const item = {};\n\n      for (let index = 0; index < this.state.attributes.length; index++) {\n        item[this.state.attributes[index]] = \"\";\n      }\n\n      this.setState({\n        data: [...this.state.data, item]\n      });\n    };\n\n    this.handleRemoveRow = () => {\n      this.setState({\n        data: this.state.data.slice(0, -1)\n      });\n    };\n\n    this.handleRemoveSpecificRow = idx => () => {\n      const data = [...this.state.data];\n      data.splice(idx, 1);\n      this.setState({\n        data\n      });\n    };\n\n    this.renderInputRow = idx => {\n      return this.state.attributes.map(attribute => React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: attribute,\n        value: this.state.data[idx][attribute],\n        onChange: this.handleChange(idx),\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })));\n    };\n\n    this.renderInputRows = () => {\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.state.data.map((item, idx) => React.createElement(\"tr\", {\n        id: \"addr0\",\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, idx), this.renderInputRow(idx), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger btn-sm\",\n        onClick: this.handleRemoveSpecificRow(idx),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Remove\")))));\n    };\n  }\n\n  async postData(url, data) {\n    const options = {\n      method: \"POST\",\n      mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    console.log(options);\n    const response = await fetch(url, options);\n    return await response;\n  }\n\n  //called when component initialized/mounted to DOM tree\n  componentDidMount() {\n    console.log(\"component mounted\"); //fetch table attributes from api\n    //add empty row based on attributes\n\n    this.handleAddRow();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"tableName01\",\n      className: \"h3 ml-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Table name: \", this.state.tableName)), React.createElement(\"table\", {\n      className: \"table table-bordered table-hover table-striped\",\n      id: \"tab_logic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \" # \"), this.state.attributes.map(attribute => React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, attribute)), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }))), this.renderInputRows()), React.createElement(\"button\", {\n      onClick: this.handleAddRow,\n      className: \"btn btn-ouline-primary m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Add Row\"), React.createElement(\"button\", {\n      onClick: this.handleRemoveRow,\n      className: \"btn btn-outline-danger float-right m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Delete Last Row\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      className: \"btn btn-outline-success m-2 btn-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Add Data\")))));\n  }\n\n}\n\nexport default AddDataContainer;","map":{"version":3,"sources":["/Users/danielsmetanka/Desktop/dataexchange.github.io/src/components/AddDataContainer.jsx"],"names":["React","Component","AddDataContainer","state","tableName","props","attributes","data","addDataURL","getAttributesURL","loading","resetState","setState","handleSubmit","postData","then","receivedData","console","log","getTableColumns","response","URL","json","handleChange","idx","e","name","value","target","handleChangeOnTableName","handleAddRow","item","index","length","handleRemoveRow","slice","handleRemoveSpecificRow","splice","renderInputRow","map","attribute","renderInputRows","url","options","method","mode","headers","body","JSON","stringify","fetch","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass AddDataContainer extends Component {\n  state = {\n    tableName: this.props.tableName,\n    //readonly\n    attributes: [\"Firstname\", \"Surname\", \"Age\"],\n    //readonly\n    data: []\n  };\n\n  addDataURL = \"api/add-data\";\n  getAttributesURL = \"\";\n  loading = true;\n\n  resetState = () => {\n    this.setState({\n      data: []\n    });\n  };\n\n  handleSubmit = () => {\n    const data = {};\n    data[\"tableName\"] = this.state.tableName;\n    data[\"data\"] = this.state.data;\n    this.resetState();\n    this.postData(this.addDataURL, data).then(receivedData => {\n      console.log(receivedData);\n    });\n  };\n\n  getTableColumns = tableName => {\n    const response = this.postData(URL, tableName);\n    const attributes = response.json();\n  };\n\n  async postData(url, data) {\n    const options = {\n      method: \"POST\",\n      mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n\n    console.log(options);\n\n    const response = await fetch(url, options);\n    return await response;\n  }\n\n  handleChange = idx => e => {\n    const { name, value } = e.target;\n    const data = [...this.state.data];\n    data[idx][name] = value;\n    this.setState({\n      data\n    });\n  };\n\n  handleChangeOnTableName = e => {\n    const { value } = e.target;\n    this.setState({\n      tableName: value\n    });\n  };\n\n  handleAddRow = () => {\n    const item = {};\n    for (let index = 0; index < this.state.attributes.length; index++) {\n      item[this.state.attributes[index]] = \"\";\n    }\n    this.setState({\n      data: [...this.state.data, item]\n    });\n  };\n\n  handleRemoveRow = () => {\n    this.setState({\n      data: this.state.data.slice(0, -1)\n    });\n  };\n\n  handleRemoveSpecificRow = idx => () => {\n    const data = [...this.state.data];\n    data.splice(idx, 1);\n    this.setState({ data });\n  };\n\n  //called when component initialized/mounted to DOM tree\n  componentDidMount() {\n    console.log(\"component mounted\");\n    //fetch table attributes from api\n    //add empty row based on attributes\n    this.handleAddRow();\n  }\n\n  renderInputRow = idx => {\n    return this.state.attributes.map(attribute => (\n      <td>\n        <input\n          type=\"text\"\n          name={attribute}\n          value={this.state.data[idx][attribute]}\n          onChange={this.handleChange(idx)}\n          className=\"form-control\"\n        />\n      </td>\n    ));\n  };\n\n  renderInputRows = () => {\n    return (\n      <tbody>\n        {this.state.data.map((item, idx) => (\n          <tr id=\"addr0\" key={idx}>\n            <td>{idx}</td>\n            {this.renderInputRow(idx)}\n            <td>\n              <button\n                className=\"btn btn-outline-danger btn-sm\"\n                onClick={this.handleRemoveSpecificRow(idx)}\n              >\n                Remove\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"row clearfix\">\n            <div className=\"col-md-12 column\">\n              <div className=\"form-group row\">\n                <label for=\"tableName01\" className=\"h3 ml-3\">\n                  Table name: {this.state.tableName}\n                </label>\n              </div>\n              <table\n                className=\"table table-bordered table-hover table-striped\"\n                id=\"tab_logic\"\n              >\n                <thead>\n                  <tr>\n                    <th className=\"text-center\"> # </th>\n                    {this.state.attributes.map(attribute => (\n                      <th className=\"text-center\">{attribute}</th>\n                    ))}\n                    <th />\n                  </tr>\n                </thead>\n                {this.renderInputRows()}\n                {/* //rendering table body */}\n              </table>\n              <button\n                onClick={this.handleAddRow}\n                className=\"btn btn-ouline-primary m-2\"\n              >\n                Add Row\n              </button>\n              <button\n                onClick={this.handleRemoveRow}\n                className=\"btn btn-outline-danger float-right m-2\"\n              >\n                Delete Last Row\n              </button>\n              <br />\n              <button\n                onClick={this.handleSubmit}\n                className=\"btn btn-outline-success m-2 btn-lg\"\n              >\n                Add Data\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddDataContainer;\n"]},"metadata":{},"sourceType":"module"}