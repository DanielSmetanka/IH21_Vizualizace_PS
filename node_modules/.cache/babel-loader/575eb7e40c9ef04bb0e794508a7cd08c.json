{"ast":null,"code":"var _jsxFileName = \"/Users/danielsmetanka/Desktop/dataexchange.github.io/src/components/AddDataContainer.jsx\";\nimport React, { Component } from \"react\";\n\nclass AddDataContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableName: this.props.tableName,\n      //readonly\n      attributes: [\"Firstname\", \"Surname\", \"Age\"],\n      //readonly\n      data: []\n    };\n    this.addDataURL = \"api/add-data\";\n    this.getAttributesURL = \"\";\n    this.loading = true;\n\n    this.resetState = () => {\n      this.setState({\n        data: []\n      });\n    };\n\n    this.handleSubmit = () => {\n      const data = {};\n      data[\"tableName\"] = this.state.tableName;\n      data[\"data\"] = this.state.data;\n      this.resetState();\n      this.postData(this.addDataURL, data).then(receivedData => {\n        console.log(receivedData);\n        this.props.parentSetClickedApp(\"ViewDataApp\");\n      });\n    };\n\n    this.getTableColumns = tableName => {\n      const response = this.postData(URL, tableName);\n      const attributes = response.json();\n    };\n\n    this.handleChange = idx => e => {\n      const {\n        name,\n        value\n      } = e.target;\n      const data = [...this.state.data];\n      data[idx][name] = value;\n      this.setState({\n        data\n      });\n    };\n\n    this.handleChangeOnTableName = e => {\n      const {\n        value\n      } = e.target;\n      this.setState({\n        tableName: value\n      });\n    };\n\n    this.handleAddRow = () => {\n      const item = {};\n\n      for (let index = 0; index < this.state.attributes.length; index++) {\n        item[this.state.attributes[index]] = \"\";\n      }\n\n      this.setState({\n        data: [...this.state.data, item]\n      });\n    };\n\n    this.handleRemoveRow = () => {\n      this.setState({\n        data: this.state.data.slice(0, -1)\n      });\n    };\n\n    this.handleRemoveSpecificRow = idx => () => {\n      const data = [...this.state.data];\n      data.splice(idx, 1);\n      this.setState({\n        data\n      });\n    };\n\n    this.renderInputRow = idx => {\n      return this.state.attributes.map(attribute => React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: attribute,\n        value: this.state.data[idx][attribute],\n        onChange: this.handleChange(idx),\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })));\n    };\n\n    this.renderInputRows = () => {\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, this.state.data.map((item, idx) => React.createElement(\"tr\", {\n        id: \"addr0\",\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, idx), this.renderInputRow(idx), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger btn-sm\",\n        onClick: this.handleRemoveSpecificRow(idx),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Remove\")))));\n    };\n  }\n\n  async postData(url, data) {\n    const options = {\n      method: \"POST\",\n      mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    console.log(options);\n    const response = await fetch(url, options);\n    return await response;\n  }\n\n  //called when component initialized/mounted to DOM tree\n  componentDidMount() {\n    console.log(\"component mounted\"); //fetch table attributes from api\n    //add empty row based on attributes\n\n    this.handleAddRow();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container col-8 float-center mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"h3 m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.props.tableName), React.createElement(\"div\", {\n      class: \"table-wrap pr-2 mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-bordered table-striped table-hover m-2\",\n      id: \"tab_logic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \" # \"), this.state.attributes.map(attribute => React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, attribute)), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }))), this.renderInputRows())), React.createElement(\"div\", {\n      className: \"float-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleAddRow,\n      className: \"btn btn-outline-primary m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"button\", {\n      onClick: this.handleRemoveRow,\n      className: \"btn btn-outline-danger m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Delete\")), React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      className: \"btn btn-outline-primary m-2 float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}\n\nexport default AddDataContainer;","map":{"version":3,"sources":["/Users/danielsmetanka/Desktop/dataexchange.github.io/src/components/AddDataContainer.jsx"],"names":["React","Component","AddDataContainer","state","tableName","props","attributes","data","addDataURL","getAttributesURL","loading","resetState","setState","handleSubmit","postData","then","receivedData","console","log","parentSetClickedApp","getTableColumns","response","URL","json","handleChange","idx","e","name","value","target","handleChangeOnTableName","handleAddRow","item","index","length","handleRemoveRow","slice","handleRemoveSpecificRow","splice","renderInputRow","map","attribute","renderInputRows","url","options","method","mode","headers","body","JSON","stringify","fetch","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass AddDataContainer extends Component {\n  state = {\n    tableName: this.props.tableName,\n    //readonly\n    attributes: [\"Firstname\", \"Surname\", \"Age\"],\n    //readonly\n    data: []\n  };\n\n  addDataURL = \"api/add-data\";\n  getAttributesURL = \"\";\n  loading = true;\n\n  resetState = () => {\n    this.setState({\n      data: []\n    });\n  };\n\n  handleSubmit = () => {\n    const data = {};\n    data[\"tableName\"] = this.state.tableName;\n    data[\"data\"] = this.state.data;\n    this.resetState();\n    this.postData(this.addDataURL, data).then(receivedData => {\n      console.log(receivedData);\n      this.props.parentSetClickedApp(\"ViewDataApp\");\n    });\n  };\n\n  getTableColumns = tableName => {\n    const response = this.postData(URL, tableName);\n    const attributes = response.json();\n  };\n\n  async postData(url, data) {\n    const options = {\n      method: \"POST\",\n      mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n\n    console.log(options);\n\n    const response = await fetch(url, options);\n    return await response;\n  }\n\n  handleChange = idx => e => {\n    const { name, value } = e.target;\n    const data = [...this.state.data];\n    data[idx][name] = value;\n    this.setState({\n      data\n    });\n  };\n\n  handleChangeOnTableName = e => {\n    const { value } = e.target;\n    this.setState({\n      tableName: value\n    });\n  };\n\n  handleAddRow = () => {\n    const item = {};\n    for (let index = 0; index < this.state.attributes.length; index++) {\n      item[this.state.attributes[index]] = \"\";\n    }\n    this.setState({\n      data: [...this.state.data, item]\n    });\n  };\n\n  handleRemoveRow = () => {\n    this.setState({\n      data: this.state.data.slice(0, -1)\n    });\n  };\n\n  handleRemoveSpecificRow = idx => () => {\n    const data = [...this.state.data];\n    data.splice(idx, 1);\n    this.setState({ data });\n  };\n\n  //called when component initialized/mounted to DOM tree\n  componentDidMount() {\n    console.log(\"component mounted\");\n    //fetch table attributes from api\n    //add empty row based on attributes\n    this.handleAddRow();\n  }\n\n  renderInputRow = idx => {\n    return this.state.attributes.map(attribute => (\n      <td>\n        <input\n          type=\"text\"\n          name={attribute}\n          value={this.state.data[idx][attribute]}\n          onChange={this.handleChange(idx)}\n          className=\"form-control\"\n        />\n      </td>\n    ));\n  };\n\n  renderInputRows = () => {\n    return (\n      <tbody>\n        {this.state.data.map((item, idx) => (\n          <tr id=\"addr0\" key={idx}>\n            <td>{idx}</td>\n            {this.renderInputRow(idx)}\n            <td>\n              <button\n                className=\"btn btn-outline-danger btn-sm\"\n                onClick={this.handleRemoveSpecificRow(idx)}\n              >\n                Remove\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"container col-8 float-center mt-4\">\n        <span className=\"h3 m-2\">{this.props.tableName}</span>\n        <div class=\"table-wrap pr-2 mb-2\">\n          <table\n            className=\"table table-bordered table-striped table-hover m-2\"\n            id=\"tab_logic\"\n          >\n            <thead>\n              <tr>\n                <th className=\"text-center\"> # </th>\n                {this.state.attributes.map(attribute => (\n                  <th className=\"text-center\">{attribute}</th>\n                ))}\n                <th />\n              </tr>\n            </thead>\n            {this.renderInputRows()}\n            {/* //rendering table body */}\n          </table>\n        </div>\n        <div className=\"float-left\">\n          <button\n            onClick={this.handleAddRow}\n            className=\"btn btn-outline-primary m-2\"\n          >\n            Add\n          </button>\n          <button\n            onClick={this.handleRemoveRow}\n            className=\"btn btn-outline-danger m-2\"\n          >\n            Delete\n          </button>\n        </div>\n\n        <button\n          onClick={this.handleSubmit}\n          className=\"btn btn-outline-primary m-2 float-right\"\n        >\n          Save\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default AddDataContainer;\n"]},"metadata":{},"sourceType":"module"}