{"ast":null,"code":"var _jsxFileName = \"/Users/danielsmetanka/Desktop/dataexchange.github.io/src/components/ColumnContainer.jsx\";\nimport React, { Component } from \"react\";\n\nclass ColumnContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableName: \"\",\n      attributes: [{\n        name: \"\",\n        type: \"\",\n        maxSize: \"\"\n      }]\n    };\n    this.URL = \"/api/table\";\n\n    this.resetState = () => {\n      this.setState({\n        tableName: \"\",\n        attributes: [{\n          name: \"\",\n          type: \"\",\n          maxSize: \"\"\n        }]\n      });\n    };\n\n    this.handleCreate = () => {\n      const data = this.state;\n      this.resetState();\n      this.postData(\"http://localhost:5000/api/table\", data).then(data => {\n        console.log(data); //TODO: Let user know that the table was created and reset the table\n      });\n    };\n\n    this.handleChange = idx => e => {\n      const {\n        name,\n        value\n      } = e.target;\n      const attributes = [...this.state.attributes];\n      attributes[idx][name] = value;\n      this.setState({\n        attributes\n      });\n    };\n\n    this.handleChangeOnTableName = e => {\n      const {\n        value\n      } = e.target;\n      this.setState({\n        tableName: value\n      });\n    };\n\n    this.handleAddRow = () => {\n      const item = {\n        name: \"\",\n        type: \"\",\n        maxSize: \"\"\n      };\n      this.setState({\n        attributes: [...this.state.attributes, item]\n      });\n    };\n\n    this.handleRemoveRow = () => {\n      this.setState({\n        attributes: this.state.attributes.slice(0, -1)\n      });\n    };\n\n    this.handleRemoveSpecificRow = idx => () => {\n      const attributes = [...this.state.attributes];\n      attributes.splice(idx, 1);\n      this.setState({\n        attributes\n      });\n    };\n  }\n\n  async postData(url, data) {\n    const options = {\n      method: \"POST\",\n      mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    console.log(options);\n    const response = await fetch(url, options);\n    return await response;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container col-8 float-center mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"h3 ml-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Table name:\"), React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"tableName01\",\n      type: \"text\",\n      name: \"tableName\",\n      value: this.state.tableName,\n      onChange: this.handleChangeOnTableName,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }))), React.createElement(\"table\", {\n      className: \"table table-bordered table-striped table-hover m-2\",\n      id: \"tab_logic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \" # \"), React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \" Name \"), React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \" Type \"), React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \" Max Size\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.state.attributes.map((item, idx) => React.createElement(\"tr\", {\n      id: \"addr0\",\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, idx), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.attributes[idx].name,\n      onChange: this.handleChange(idx),\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"type\",\n      value: this.state.attributes[idx].type,\n      onChange: this.handleChange(idx),\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"maxSize\",\n      value: this.state.attributes[idx].maxSize,\n      onChange: this.handleChange(idx),\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-outline-danger btn-sm\",\n      onClick: this.handleRemoveSpecificRow(idx),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Remove\")))))), React.createElement(\"button\", {\n      onClick: this.handleAddRow,\n      className: \"btn btn-outline-primary m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Add Row\"), React.createElement(\"div\", {\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleRemoveRow,\n      className: \"btn btn-outline-danger m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Delete Last Row\"), React.createElement(\"button\", {\n      onClick: this.handleCreate,\n      className: \"btn btn-outline-success m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Create Table\")));\n  }\n\n}\n\nexport default ColumnContainer;","map":{"version":3,"sources":["/Users/danielsmetanka/Desktop/dataexchange.github.io/src/components/ColumnContainer.jsx"],"names":["React","Component","ColumnContainer","state","tableName","attributes","name","type","maxSize","URL","resetState","setState","handleCreate","data","postData","then","console","log","handleChange","idx","e","value","target","handleChangeOnTableName","handleAddRow","item","handleRemoveRow","slice","handleRemoveSpecificRow","splice","url","options","method","mode","headers","body","JSON","stringify","response","fetch","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass ColumnContainer extends Component {\n  state = {\n    tableName: \"\",\n    attributes: [\n      {\n        name: \"\",\n        type: \"\",\n        maxSize: \"\"\n      }\n    ]\n  };\n  URL = \"/api/table\";\n\n  resetState = () => {\n    this.setState({\n      tableName: \"\",\n      attributes: [\n        {\n          name: \"\",\n          type: \"\",\n          maxSize: \"\"\n        }\n      ]\n    });\n  };\n\n  handleCreate = () => {\n    const data = this.state;\n    this.resetState();\n    this.postData(\"http://localhost:5000/api/table\", data).then(data => {\n      console.log(data);\n      //TODO: Let user know that the table was created and reset the table\n    });\n  };\n\n  async postData(url, data) {\n    const options = {\n      method: \"POST\",\n      mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n\n    console.log(options);\n\n    const response = await fetch(url, options);\n    return await response;\n  }\n\n  handleChange = idx => e => {\n    const { name, value } = e.target;\n    const attributes = [...this.state.attributes];\n    attributes[idx][name] = value;\n    this.setState({\n      attributes\n    });\n  };\n\n  handleChangeOnTableName = e => {\n    const { value } = e.target;\n    this.setState({\n      tableName: value\n    });\n  };\n\n  handleAddRow = () => {\n    const item = {\n      name: \"\",\n      type: \"\",\n      maxSize: \"\"\n    };\n    this.setState({\n      attributes: [...this.state.attributes, item]\n    });\n  };\n\n  handleRemoveRow = () => {\n    this.setState({\n      attributes: this.state.attributes.slice(0, -1)\n    });\n  };\n  handleRemoveSpecificRow = idx => () => {\n    const attributes = [...this.state.attributes];\n    attributes.splice(idx, 1);\n    this.setState({ attributes });\n  };\n\n  render() {\n    return (\n      <div className=\"container col-8 float-center mt-4\">\n        <div className=\"form-group row m-2\">\n          <span className=\"h3 ml-3\">Table name:</span>\n\n          <div className=\"col-sm-3\">\n            <input\n              id=\"tableName01\"\n              type=\"text\"\n              name=\"tableName\"\n              value={this.state.tableName}\n              onChange={this.handleChangeOnTableName}\n              className=\"form-control\"\n            />\n          </div>\n        </div>\n\n        <table\n          className=\"table table-bordered table-striped table-hover m-2\"\n          id=\"tab_logic\"\n        >\n          <thead>\n            <tr>\n              <th className=\"text-center\"> # </th>\n              <th className=\"text-center\"> Name </th>\n              <th className=\"text-center\"> Type </th>\n              <th className=\"text-center\"> Max Size</th>\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.attributes.map((item, idx) => (\n              <tr id=\"addr0\" key={idx}>\n                <td>{idx}</td>\n                <td>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={this.state.attributes[idx].name}\n                    onChange={this.handleChange(idx)}\n                    className=\"form-control\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    name=\"type\"\n                    value={this.state.attributes[idx].type}\n                    onChange={this.handleChange(idx)}\n                    className=\"form-control\"\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    name=\"maxSize\"\n                    value={this.state.attributes[idx].maxSize}\n                    onChange={this.handleChange(idx)}\n                    className=\"form-control\"\n                  />\n                </td>\n                <td>\n                  <button\n                    className=\"btn btn-outline-danger btn-sm\"\n                    onClick={this.handleRemoveSpecificRow(idx)}\n                  >\n                    Remove\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <button\n          onClick={this.handleAddRow}\n          className=\"btn btn-outline-primary m-2\"\n        >\n          Add Row\n        </button>\n        <div className=\"float-right\">\n          <button\n            onClick={this.handleRemoveRow}\n            className=\"btn btn-outline-danger m-2\"\n          >\n            Delete Last Row\n          </button>\n          <button\n            onClick={this.handleCreate}\n            className=\"btn btn-outline-success m-2\"\n          >\n            Create Table\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ColumnContainer;\n"]},"metadata":{},"sourceType":"module"}