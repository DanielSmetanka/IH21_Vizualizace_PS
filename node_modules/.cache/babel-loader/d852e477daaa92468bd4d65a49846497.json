{"ast":null,"code":"var _jsxFileName = \"/Users/danielsmetanka/Desktop/dataexchange.github.io/src/components/AddDataContainer.jsx\";\nimport React, { Component } from \"react\";\n\nclass AddDataContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableName: this.props.tableName,\n      attributes: [\"column1\", \"column2\"],\n      data: []\n    };\n    this.URL = \"api/add-data\";\n    this.loading = true;\n\n    this.resetState = () => {\n      this.setState({\n        attributes: []\n      });\n    };\n\n    this.handleSubmit = () => {\n      const data = this.state;\n      this.resetState();\n      this.postData(this.URL, data).then(receivedData => {\n        console.log(receivedData);\n      });\n    };\n\n    this.getTableColumns = tableName => {\n      const response = this.postData(URL, tableName);\n      const attributes = response.json();\n    };\n\n    this.handleChange = idx => e => {\n      const {\n        name,\n        value\n      } = e.target;\n      const data = [...this.state.data];\n      data[idx][name] = value;\n      this.setState({\n        data\n      });\n    };\n\n    this.handleChangeOnTableName = e => {\n      const {\n        value\n      } = e.target;\n      this.setState({\n        tableName: value\n      });\n    };\n\n    this.handleAddRow = () => {\n      const item = {};\n\n      for (let index = 0; index < this.state.attributes.length; index++) {\n        item[this.state.attributes[index]] = \"\";\n      }\n\n      this.setState({\n        data: [...this.state.data, item]\n      });\n    };\n\n    this.handleRemoveRow = () => {\n      this.setState({\n        data: this.state.data.slice(0, -1)\n      });\n    };\n\n    this.handleRemoveSpecificRow = idx => () => {\n      const data = [...this.state.data];\n      data.splice(idx, 1);\n      this.setState({\n        data\n      });\n    };\n\n    this.renderInputRow = idx => {\n      return this.state.attributes.map(attribute => React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: attribute,\n        value: this.state.data[idx][attribute],\n        onChange: this.handleChange(idx),\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })));\n    };\n\n    this.renderInputRows = () => {\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.state.data.map((item, idx) => React.createElement(\"tr\", {\n        id: \"addr0\",\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, idx), this.renderInputRow(idx), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-outline-danger btn-sm\",\n        onClick: this.handleRemoveSpecificRow(idx),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Remove\")))));\n    };\n  }\n\n  async postData(url, data) {\n    const options = {\n      method: \"POST\",\n      mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    console.log(options);\n    const response = await fetch(url, options);\n    return await response;\n  }\n\n  //called when component initialized/mounted to DOM tree\n  componentDidMount() {\n    console.log(\"component mounted\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"tableName01\",\n      className: \"h3 ml-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Table name: \", this.state.tableName)), React.createElement(\"table\", {\n      className: \"table table-bordered table-hover table-striped\",\n      id: \"tab_logic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \" # \"), this.state.attributes.map(attribute => React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, attribute)), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }))), this.renderInputRows()), React.createElement(\"button\", {\n      onClick: this.handleAddRow,\n      className: \"btn btn-primary m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Add Row\"), React.createElement(\"button\", {\n      onClick: this.handleRemoveRow,\n      className: \"btn btn-danger float-right m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Delete Last Row\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleCreate,\n      className: \"btn btn btn-success m-2 btn-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Add Data\")))));\n  }\n\n}\n\nexport default AddDataContainer;","map":{"version":3,"sources":["/Users/danielsmetanka/Desktop/dataexchange.github.io/src/components/AddDataContainer.jsx"],"names":["React","Component","AddDataContainer","state","tableName","props","attributes","data","URL","loading","resetState","setState","handleSubmit","postData","then","receivedData","console","log","getTableColumns","response","json","handleChange","idx","e","name","value","target","handleChangeOnTableName","handleAddRow","item","index","length","handleRemoveRow","slice","handleRemoveSpecificRow","splice","renderInputRow","map","attribute","renderInputRows","url","options","method","mode","headers","body","JSON","stringify","fetch","componentDidMount","render","handleCreate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass AddDataContainer extends React.Component {\n  state = {\n    tableName: this.props.tableName,\n    attributes: [\"column1\", \"column2\"],\n    data: []\n  };\n  URL = \"api/add-data\";\n  loading = true;\n\n  resetState = () => {\n    this.setState({\n      attributes: []\n    });\n  };\n\n  handleSubmit = () => {\n    const data = this.state;\n    this.resetState();\n    this.postData(this.URL, data).then(receivedData => {\n      console.log(receivedData);\n    });\n  };\n\n  getTableColumns = tableName => {\n    const response = this.postData(URL, tableName);\n    const attributes = response.json();\n  };\n\n  async postData(url, data) {\n    const options = {\n      method: \"POST\",\n      mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n\n    console.log(options);\n\n    const response = await fetch(url, options);\n    return await response;\n  }\n\n  handleChange = idx => e => {\n    const { name, value } = e.target;\n    const data = [...this.state.data];\n    data[idx][name] = value;\n    this.setState({\n      data\n    });\n  };\n\n  handleChangeOnTableName = e => {\n    const { value } = e.target;\n    this.setState({\n      tableName: value\n    });\n  };\n\n  handleAddRow = () => {\n    const item = {};\n    for (let index = 0; index < this.state.attributes.length; index++) {\n      item[this.state.attributes[index]] = \"\";\n    }\n    this.setState({\n      data: [...this.state.data, item]\n    });\n  };\n\n  handleRemoveRow = () => {\n    this.setState({\n      data: this.state.data.slice(0, -1)\n    });\n  };\n\n  handleRemoveSpecificRow = idx => () => {\n    const data = [...this.state.data];\n    data.splice(idx, 1);\n    this.setState({ data });\n  };\n\n  //called when component initialized/mounted to DOM tree\n  componentDidMount() {\n    console.log(\"component mounted\");\n  }\n\n  renderInputRow = idx => {\n    return this.state.attributes.map(attribute => (\n      <td>\n        <input\n          type=\"text\"\n          name={attribute}\n          value={this.state.data[idx][attribute]}\n          onChange={this.handleChange(idx)}\n          className=\"form-control\"\n        />\n      </td>\n    ));\n  };\n\n  renderInputRows = () => {\n    return (\n      <tbody>\n        {this.state.data.map((item, idx) => (\n          <tr id=\"addr0\" key={idx}>\n            <td>{idx}</td>\n            {this.renderInputRow(idx)}\n            <td>\n              <button\n                className=\"btn btn-outline-danger btn-sm\"\n                onClick={this.handleRemoveSpecificRow(idx)}\n              >\n                Remove\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"row clearfix\">\n            <div className=\"col-md-12 column\">\n              <div className=\"form-group row\">\n                <label for=\"tableName01\" className=\"h3 ml-3\">\n                  Table name: {this.state.tableName}\n                </label>\n              </div>\n              <table\n                className=\"table table-bordered table-hover table-striped\"\n                id=\"tab_logic\"\n              >\n                <thead>\n                  <tr>\n                    <th className=\"text-center\"> # </th>\n                    {this.state.attributes.map(attribute => (\n                      <th className=\"text-center\">{attribute}</th>\n                    ))}\n                    <th />\n                  </tr>\n                </thead>\n                {this.renderInputRows()}\n              </table>\n              <button\n                onClick={this.handleAddRow}\n                className=\"btn btn-primary m-2\"\n              >\n                Add Row\n              </button>\n              <button\n                onClick={this.handleRemoveRow}\n                className=\"btn btn-danger float-right m-2\"\n              >\n                Delete Last Row\n              </button>\n              <br />\n              <button\n                onClick={this.handleCreate}\n                className=\"btn btn btn-success m-2 btn-lg\"\n              >\n                Add Data\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddDataContainer;\n"]},"metadata":{},"sourceType":"module"}