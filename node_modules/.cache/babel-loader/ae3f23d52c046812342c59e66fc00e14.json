{"ast":null,"code":"var _jsxFileName = \"/Users/danielsmetanka/Desktop/dataexchange.github.io/src/components/column_container.jsx\";\nimport React, { Component } from \"react\";\nimport Column from \"./column\";\n\nclass ColumnContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableName: \"\",\n      rows: [{}]\n    };\n\n    this.handleCreate = () => {\n      this.postData = this.postData.bind(this);\n      this.postData(\"\").then(data => {\n        console.log(data);\n      });\n    };\n\n    this.handleChange = idx => e => {\n      const {\n        name,\n        value\n      } = e.target;\n      const rows = [...this.state.rows];\n      rows[idx][name] = value;\n      this.setState({\n        rows\n      });\n    };\n\n    this.handleAddRow = () => {\n      const item = {\n        name: \"\",\n        type: \"\",\n        maxsize: \"\"\n      };\n      this.setState({\n        rows: [...this.state.rows, item]\n      });\n    };\n\n    this.handleRemoveRow = () => {\n      this.setState({\n        rows: this.state.rows.slice(0, -1)\n      });\n    };\n\n    this.handleRemoveSpecificRow = idx => () => {\n      const rows = [...this.state.rows];\n      rows.splice(idx, 1);\n      this.setState({\n        rows\n      });\n    };\n  }\n\n  async postData(url) {\n    const data = this.state;\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    console.log(options);\n    const response = await fetch(url, options);\n    return await response.json();\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-bordered table-hover table-striped\",\n      id: \"tab_logic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" # \"), React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \" Name \"), React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \" Type \"), React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \" Max Size\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.rows.map((item, idx) => React.createElement(\"tr\", {\n      id: \"addr0\",\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, idx), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.rows[idx].name,\n      onChange: this.handleChange(idx),\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"type\",\n      value: this.state.rows[idx].type,\n      onChange: this.handleChange(idx),\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"maxsize\",\n      value: this.state.rows[idx].maxsize,\n      onChange: this.handleChange(idx),\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-outline-danger btn-sm\",\n      onClick: this.handleRemoveSpecificRow(idx),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Remove\")))))), React.createElement(\"button\", {\n      onClick: this.handleAddRow,\n      className: \"btn btn-primary m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Add Row\"), React.createElement(\"button\", {\n      onClick: this.handleRemoveRow,\n      className: \"btn btn-danger float-right m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Delete Last Row\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleCreate,\n      className: \"btn btn btn-success m-2 btn-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Create Table\")))));\n  }\n\n}\n\nexport default ColumnContainer;","map":{"version":3,"sources":["/Users/danielsmetanka/Desktop/dataexchange.github.io/src/components/column_container.jsx"],"names":["React","Component","Column","ColumnContainer","state","tableName","rows","handleCreate","postData","bind","then","data","console","log","handleChange","idx","e","name","value","target","setState","handleAddRow","item","type","maxsize","handleRemoveRow","slice","handleRemoveSpecificRow","splice","url","options","method","headers","body","JSON","stringify","response","fetch","json","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Column from \"./column\";\n\nclass ColumnContainer extends React.Component {\n  state = {\n    tableName: \"\",\n    rows: [{}]\n  };\n\n  handleCreate = () => {\n    this.postData = this.postData.bind(this);\n    this.postData(\"\").then(data => {\n      console.log(data);\n    });\n  };\n\n  async postData(url) {\n    const data = this.state;\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n\n    console.log(options);\n\n    const response = await fetch(url, options);\n    return await response.json();\n  }\n\n  handleChange = idx => e => {\n    const { name, value } = e.target;\n    const rows = [...this.state.rows];\n    rows[idx][name] = value;\n    this.setState({\n      rows\n    });\n  };\n\n  handleAddRow = () => {\n    const item = {\n      name: \"\",\n      type: \"\",\n      maxsize: \"\"\n    };\n    this.setState({\n      rows: [...this.state.rows, item]\n    });\n  };\n  handleRemoveRow = () => {\n    this.setState({\n      rows: this.state.rows.slice(0, -1)\n    });\n  };\n  handleRemoveSpecificRow = idx => () => {\n    const rows = [...this.state.rows];\n    rows.splice(idx, 1);\n    this.setState({ rows });\n  };\n  render() {\n    console.log(this.state);\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"row clearfix\">\n            <div className=\"col-md-12 column\">\n              <table\n                className=\"table table-bordered table-hover table-striped\"\n                id=\"tab_logic\"\n              >\n                <thead>\n                  <tr>\n                    <th className=\"text-center\"> # </th>\n                    <th className=\"text-center\"> Name </th>\n                    <th className=\"text-center\"> Type </th>\n                    <th className=\"text-center\"> Max Size</th>\n                    <th />\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.rows.map((item, idx) => (\n                    <tr id=\"addr0\" key={idx}>\n                      <td>{idx}</td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          name=\"name\"\n                          value={this.state.rows[idx].name}\n                          onChange={this.handleChange(idx)}\n                          className=\"form-control\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          name=\"type\"\n                          value={this.state.rows[idx].type}\n                          onChange={this.handleChange(idx)}\n                          className=\"form-control\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          name=\"maxsize\"\n                          value={this.state.rows[idx].maxsize}\n                          onChange={this.handleChange(idx)}\n                          className=\"form-control\"\n                        />\n                      </td>\n                      <td>\n                        <button\n                          className=\"btn btn-outline-danger btn-sm\"\n                          onClick={this.handleRemoveSpecificRow(idx)}\n                        >\n                          Remove\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <button\n                onClick={this.handleAddRow}\n                className=\"btn btn-primary m-2\"\n              >\n                Add Row\n              </button>\n              <button\n                onClick={this.handleRemoveRow}\n                className=\"btn btn-danger float-right m-2\"\n              >\n                Delete Last Row\n              </button>\n              <br />\n              <button\n                onClick={this.handleCreate}\n                className=\"btn btn btn-success m-2 btn-lg\"\n              >\n                Create Table\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ColumnContainer;\n"]},"metadata":{},"sourceType":"module"}