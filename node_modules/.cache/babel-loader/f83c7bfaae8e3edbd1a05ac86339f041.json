{"ast":null,"code":"var _jsxFileName = \"/Users/danielsmetanka/Desktop/dataexchange.github.io/src/components/TableDataContainer.jsx\";\nimport React, { Component } from \"react\";\n\nclass TableDataContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableName: this.props.tableName,\n      tableAttributes: [\"Firstname\", \"Surname\", \"Age\"],\n      data: [{\n        Firstname: \"Daniel\",\n        Surname: \"Smetanka\",\n        Age: \"21\"\n      }, {\n        Firstname: \"Jirka\",\n        Surname: \"Krejci\",\n        Age: \"22\"\n      }] //whole table content for now (later implementation should not load the whole table)\n\n    };\n    this.tableDataURL = \"\";\n    this.tableAttributesURL = \"\";\n\n    this.renderTableDataRow = idx => {\n      return this.state.tableAttributes.map(attribute => React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.state.data[idx][attribute])));\n    };\n\n    this.renderTableData = () => {\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.state.data.map((item, idx) => React.createElement(\"tr\", {\n        id: \"addr0\",\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, idx), this.renderTableDataRow(idx))));\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      tableName: this.props.tableName\n    }); //fetch data from api\n  }\n\n  render() {\n    console.log(\"container:\", this.props.tableName); //init state - take first table from TableNameContainer and display it or\n    //dont display anything\n\n    return React.createElement(\"div\", {\n      className: \"container col-8 float-center mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"tableName01\",\n      className: \"h3 ml-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Table name: \", this.props.tableName)), React.createElement(\"table\", {\n      className: \"table table-bordered table-hover table-striped\",\n      id: \"tab_logic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" # \"), this.state.tableAttributes.map(attribute => React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, attribute)))), this.renderTableData()));\n  }\n\n}\n\nexport default TableDataContainer;","map":{"version":3,"sources":["/Users/danielsmetanka/Desktop/dataexchange.github.io/src/components/TableDataContainer.jsx"],"names":["React","Component","TableDataContainer","state","tableName","props","tableAttributes","data","Firstname","Surname","Age","tableDataURL","tableAttributesURL","renderTableDataRow","idx","map","attribute","renderTableData","item","componentDidMount","setState","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,kBAAN,SAAiCD,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACzCE,KADyC,GACjC;AACNC,MAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWD,SADhB;AAENE,MAAAA,eAAe,EAAE,CAAC,WAAD,EAAc,SAAd,EAAyB,KAAzB,CAFX;AAGNC,MAAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,SAAS,EAAE,QADb;AAEEC,QAAAA,OAAO,EAAE,UAFX;AAGEC,QAAAA,GAAG,EAAE;AAHP,OADI,EAMJ;AACEF,QAAAA,SAAS,EAAE,OADb;AAEEC,QAAAA,OAAO,EAAE,QAFX;AAGEC,QAAAA,GAAG,EAAE;AAHP,OANI,CAHA,CAeN;;AAfM,KADiC;AAAA,SAmBzCC,YAnByC,GAmB1B,EAnB0B;AAAA,SAoBzCC,kBApByC,GAoBpB,EApBoB;;AAAA,SA2BzCC,kBA3ByC,GA2BpBC,GAAG,IAAI;AAC1B,aAAO,KAAKX,KAAL,CAAWG,eAAX,CAA2BS,GAA3B,CAA+BC,SAAS,IAC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC,KAAKb,KAAL,CAAWI,IAAX,CAAgBO,GAAhB,EAAqBE,SAArB,CAAhC,CADF,CADK,CAAP;AAKD,KAjCwC;;AAAA,SAmCzCC,eAnCyC,GAmCvB,MAAM;AACtB,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKd,KAAL,CAAWI,IAAX,CAAgBQ,GAAhB,CAAoB,CAACG,IAAD,EAAOJ,GAAP,KACnB;AAAI,QAAA,EAAE,EAAC,OAAP;AAAe,QAAA,GAAG,EAAEA,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,GAAL,CADF,EAEG,KAAKD,kBAAL,CAAwBC,GAAxB,CAFH,CADD,CADH,CADF;AAUD,KA9CwC;AAAA;;AAsBzCK,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AAAEhB,MAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWD;AAAxB,KAAd,EADkB,CAElB;AACD;;AAuBDiB,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKlB,KAAL,CAAWD,SAArC,EADO,CAEP;AACA;;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,GAAG,EAAC,aAAX;AAAyB,MAAA,SAAS,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACe,KAAKC,KAAL,CAAWD,SAD1B,CADF,CADF,EAME;AACE,MAAA,SAAS,EAAC,gDADZ;AAEE,MAAA,EAAE,EAAC,WAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEG,KAAKD,KAAL,CAAWG,eAAX,CAA2BS,GAA3B,CAA+BC,SAAS,IACvC;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BA,SAA7B,CADD,CAFH,CADF,CAJF,EAYG,KAAKC,eAAL,EAZH,CANF,CADF;AAwBD;;AA7EwC;;AAgF3C,eAAef,kBAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass TableDataContainer extends Component {\n  state = {\n    tableName: this.props.tableName,\n    tableAttributes: [\"Firstname\", \"Surname\", \"Age\"],\n    data: [\n      {\n        Firstname: \"Daniel\",\n        Surname: \"Smetanka\",\n        Age: \"21\"\n      },\n      {\n        Firstname: \"Jirka\",\n        Surname: \"Krejci\",\n        Age: \"22\"\n      }\n    ]\n    //whole table content for now (later implementation should not load the whole table)\n  };\n\n  tableDataURL = \"\";\n  tableAttributesURL = \"\";\n\n  componentDidMount() {\n    this.setState({ tableName: this.props.tableName });\n    //fetch data from api\n  }\n\n  renderTableDataRow = idx => {\n    return this.state.tableAttributes.map(attribute => (\n      <td>\n        <span className=\"form-control\">{this.state.data[idx][attribute]}</span>\n      </td>\n    ));\n  };\n\n  renderTableData = () => {\n    return (\n      <tbody>\n        {this.state.data.map((item, idx) => (\n          <tr id=\"addr0\" key={idx}>\n            <td>{idx}</td>\n            {this.renderTableDataRow(idx)}\n          </tr>\n        ))}\n      </tbody>\n    );\n  };\n\n  render() {\n    console.log(\"container:\", this.props.tableName);\n    //init state - take first table from TableNameContainer and display it or\n    //dont display anything\n\n    return (\n      <div className=\"container col-8 float-center mt-4\">\n        <div className=\"form-group row\">\n          <label for=\"tableName01\" className=\"h3 ml-3\">\n            Table name: {this.props.tableName}\n          </label>\n        </div>\n        <table\n          className=\"table table-bordered table-hover table-striped\"\n          id=\"tab_logic\"\n        >\n          <thead>\n            <tr>\n              <th className=\"text-center\"> # </th>\n              {this.state.tableAttributes.map(attribute => (\n                <th className=\"text-center\">{attribute}</th>\n              ))}\n            </tr>\n          </thead>\n          {this.renderTableData()}\n          {/* //rendering table body */}\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default TableDataContainer;\n"]},"metadata":{},"sourceType":"module"}